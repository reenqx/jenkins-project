Started by user Nurin Khankaew
Obtained Jenkinsfile from git https://github.com/reenqx/jenkins-project.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/project-jenkins
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/project-jenkins/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/reenqx/jenkins-project.git # timeout=10
Fetching upstream changes from https://github.com/reenqx/jenkins-project.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/reenqx/jenkins-project.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision f2c2047e1afec52f6362e4a31648de930a60608c (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f2c2047e1afec52f6362e4a31648de930a60608c # timeout=10
Commit message: "55"
 > git rev-list --no-walk 5fe41c341f1f23429b4e08bd71becca10a4cd54d # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $NETLIFY_AUTH_TOKEN
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/project-jenkins/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/reenqx/jenkins-project.git # timeout=10
Fetching upstream changes from https://github.com/reenqx/jenkins-project.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/reenqx/jenkins-project.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision f2c2047e1afec52f6362e4a31648de930a60608c (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f2c2047e1afec52f6362e4a31648de930a60608c # timeout=10
Commit message: "55"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 2c252300edce829ca299f2f9d42bc7a7471cfd18b712333acf6c5d13ba336364
but /var/jenkins_home/workspace/project-jenkins could not be found among []
but /var/jenkins_home/workspace/project-jenkins@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/project-jenkins -v /var/jenkins_home/workspace/project-jenkins:/var/jenkins_home/workspace/project-jenkins:rw,z -v /var/jenkins_home/workspace/project-jenkins@tmp:/var/jenkins_home/workspace/project-jenkins@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top 891b4476675b35d02a87a867818ab82ca14fe32a584a0ba55a52c3fe8a43d373 -eo pid,comm
[Pipeline] {
[Pipeline] echo
🔧 Checking required files...
[Pipeline] sh
+ test -f index.html
+ test -f netlify/functions/app.js
+ echo '✅ Build check passed.'
✅ Build check passed.
[Pipeline] }
$ docker stop --time=1 891b4476675b35d02a87a867818ab82ca14fe32a584a0ba55a52c3fe8a43d373
$ docker rm -f --volumes 891b4476675b35d02a87a867818ab82ca14fe32a584a0ba55a52c3fe8a43d373
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 2c252300edce829ca299f2f9d42bc7a7471cfd18b712333acf6c5d13ba336364
but /var/jenkins_home/workspace/project-jenkins could not be found among []
but /var/jenkins_home/workspace/project-jenkins@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/project-jenkins -v /var/jenkins_home/workspace/project-jenkins:/var/jenkins_home/workspace/project-jenkins:rw,z -v /var/jenkins_home/workspace/project-jenkins@tmp:/var/jenkins_home/workspace/project-jenkins@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top 735f139c24c4fcfc6828f09e3d4fc2702f3caeb4033cb22f577adbd0bf839872 -eo pid,comm
[Pipeline] {
[Pipeline] echo
Hello page load...
[Pipeline] sh
+ npm install uuid

removed 1597 packages, and audited 2 packages in 7s

found 0 vulnerabilities
+ node -e 'require('"'"'./netlify/functions/app.js'"'"'); console.log('"'"'✅ Script function loaded successfully'"'"')'
✅ Script function loaded successfully
[Pipeline] }
$ docker stop --time=1 735f139c24c4fcfc6828f09e3d4fc2702f3caeb4033cb22f577adbd0bf839872
$ docker rm -f --volumes 735f139c24c4fcfc6828f09e3d4fc2702f3caeb4033cb22f577adbd0bf839872
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] getContext
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:18-alpine
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container 2c252300edce829ca299f2f9d42bc7a7471cfd18b712333acf6c5d13ba336364
but /var/jenkins_home/workspace/project-jenkins could not be found among []
but /var/jenkins_home/workspace/project-jenkins@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -w /var/jenkins_home/workspace/project-jenkins -v /var/jenkins_home/workspace/project-jenkins:/var/jenkins_home/workspace/project-jenkins:rw,z -v /var/jenkins_home/workspace/project-jenkins@tmp:/var/jenkins_home/workspace/project-jenkins@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:18-alpine cat
$ docker top edd46593bd94a88b01bffa3f57affc20a56a647f902910ede436a3b269f8c78a -eo pid,comm
[Pipeline] {
[Pipeline] echo
🚀 Deploying to Netlify...
[Pipeline] sh
+ npm install netlify-cli
npm warn deprecated rimraf@3.0.2: Rimraf versions prior to v4 are no longer supported
npm warn deprecated npmlog@5.0.1: This package is no longer supported.
npm warn deprecated gauge@3.0.2: This package is no longer supported.
npm warn deprecated are-we-there-yet@2.0.0: This package is no longer supported.
npm warn deprecated glob@8.1.0: Glob versions prior to v9 are no longer supported

added 1596 packages, and audited 1601 packages in 1m

250 packages are looking for funding
  run `npm fund` for details

8 moderate severity vulnerabilities

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
+ npx netlify deploy '--auth=****' '--site=43209e1b-2e89-4b47-91a5-92dd21a3c8e7' '--dir=.' --prod
Deploy path:        /var/jenkins_home/workspace/project-jenkins
Functions path:     /var/jenkins_home/workspace/project-jenkins/netlify/functions
Configuration path: /var/jenkins_home/workspace/project-jenkins/netlify.toml
Deploying to main site URL...
[33m⠋[39m Uploading blobs to deploy store...

​
Netlify Build                                                 
────────────────────────────────────────────────────────────────
​
❯ Version
  @netlify/build 30.0.6
​
❯ Flags
  auth: ****
  deployId: 67e7bc5034bb82f1696fe32f
  dir: .
  open: false
  prod: true
  prodIfUnlocked: false
  site: 43209e1b-2e89-4b47-91a5-92dd21a3c8e7
  skipFunctionsCache: false
​
❯ Current directory
  /var/jenkins_home/workspace/project-jenkins
​
❯ Config file
  /var/jenkins_home/workspace/project-jenkins/netlify.toml
​
❯ Context
  dev
[33m⠙[39m Finished uploading blobs to deploy store
[33m⠋[39m Hashing files...
[33m⠋[39m Looking for a functions cache...
[33m⠙[39m No cached functions were found
[33m⠙[39m Finished hashing 13 files and 1 functions
[33m⠋[39m CDN diffing files...
[33m⠙[39m CDN requesting 7 files and 1 functions
[33m⠋[39m Uploading 8 files
[33m⠙[39m Finished uploading 8 assets
[33m⠋[39m Waiting for deploy to go live...
[33m⠙[39m Deploy is live!

Build logs:         https://app.netlify.com/sites/famous-ganache-6e6a64/deploys/67e7bc5034bb82f1696fe32f
Function logs:      https://app.netlify.com/sites/famous-ganache-6e6a64/logs/functions
Edge function Logs: https://app.netlify.com/sites/famous-ganache-6e6a64/logs/edge-functions
Unique deploy URL:  https://67e7bc5034bb82f1696fe32f--famous-ganache-6e6a64.netlify.app
Website URL:        https://famous-ganache-6e6a64.netlify.app
[Pipeline] }
$ docker stop --time=1 edd46593bd94a88b01bffa3f57affc20a56a647f902910ede436a3b269f8c78a
$ docker rm -f --volumes edd46593bd94a88b01bffa3f57affc20a56a647f902910ede436a3b269f8c78a
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Post Deploy)
[Pipeline] echo
✅ Deployment complete! Hello Page.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
🎉 CI/CD pipeline finished successfully.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
