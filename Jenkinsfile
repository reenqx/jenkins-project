pipeline {
    agent none

    environment {
        NETLIFY_SITE_ID = '43209e1b-2e89-4b47-91a5-92dd21a3c8e7'
        NETLIFY_AUTH_TOKEN = credentials('token')
    }

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'   // ‡πÉ‡∏ä‡πâ Docker image ‡∏ó‡∏µ‡πà‡∏°‡∏µ Node.js ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
                    reuseNode true
                }
            }
            steps {
                echo "üîç Checking required files..."
                sh '''
                    test -f public/index.html || (echo "üö® index.html is missing!" && exit 1)
                    test -f netlify/functions/app.js || (echo "‚ö†Ô∏è app.js is missing!" && exit 1)
                    echo "‚úÖ All necessary files are available!"
                '''
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                echo "üõ†Ô∏è Running application test..."
                sh '''
                    node -e "require('./netlify/functions/app.js'); console.log('üéØ app.js loaded successfully!')"
                '''
            }
        }

        stage('Deploy') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                echo "üöÄ Installing Netlify CLI and deploying the project to Netlify..."
                sh '''
                    npm install netlify-cli
                    node_modules/.bin/netlify deploy \
                      --auth=$NETLIFY_AUTH_TOKEN \
                      --site=$NETLIFY_SITE_ID \
                      --dir=. \
                      --prod
                '''
            }
        }

        stage('Post Deploy') {
            steps {
                echo "üéâ Deployment complete! Your website is now live."
            }
        }
    }

    post {
        success {
            echo "‚úÖ CI/CD pipeline executed successfully! üéä"
        }
        failure {
            echo "‚ùå Pipeline failed. Please check the logs!"
        }
    }
}
